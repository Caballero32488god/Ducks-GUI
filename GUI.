local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui")
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent GUI",
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
})

-- Add Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "skull" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "cog" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map" }),
    PlayerStats = Window:AddTab({ Title = "Player Stats", Icon = "user" }),
}

-- Killer Tab Content
local KillerSection = Tabs.Killer:AddSection("Killer Controls")

-- Auto Kill Button
KillerSection:AddButton("Auto Kill", {
    Callback = function()
        -- Implement Auto Kill functionality here
    end,
})

-- Teleport Section
KillerSection:AddButton("Teleport to User", {
    Callback = function()
        -- Implement Teleport to User functionality here
    end,
})

-- Set Tool Speed Section
KillerSection:AddInput("Set Tool Speed", {
    Title = "Enter Speed Value",
    Placeholder = "Type value here",
    Callback = function(value)
        -- Implement Set Tool Speed functionality here
    end,
})

-- Settings Tab Content
local SettingsSection = Tabs.Settings:AddSection("Day Cycle")

SettingsSection:AddDropdown("Daycycle", {
    Values = {"Morning", "Afternoon", "Night"},
    Callback = function(selectedCycle)
        -- Implement Daycycle functionality here
    end,
})

-- Teleport Tab Content
local TeleportSection = Tabs.Teleport:AddSection("Teleport Controls")

-- Create Dropdown for Teleporting to Users
TeleportSection:AddDropdown("Teleport to User", {
    Values = {},
    Callback = function(selectedPlayer)
        local playerToTeleport = Players:FindFirstChild(selectedPlayer)
        if playerToTeleport and playerToTeleport.Character and playerToTeleport.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character:SetPrimaryPartCFrame(playerToTeleport.Character.HumanoidRootPart.CFrame)
        end
    end,
})

-- Update Dropdown Values with Current Players
local function updateUserDropdown()
    local playerNames = {}
    for _, player in pairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    TeleportSection:UpdateDropdown("Teleport to User", playerNames)
end

-- Call the update function initially and whenever players are added/removed
updateUserDropdown()
Players.PlayerAdded:Connect(updateUserDropdown)
Players.PlayerRemoving:Connect(updateUserDropdown)

-- Player Stats Tab Content
local PlayerStatsSection = Tabs.PlayerStats:AddSection("Player Stats")

-- Create the main GUI for stats input
local inputFrame = Instance.new("Frame")
inputFrame.Size = UDim2.new(0.4, 0, 0.5, 0)
inputFrame.Position = UDim2.new(0.3, 0, 0.25, 0)
inputFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
inputFrame.Parent = ScreenGui

-- Input box for username
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(0.9, 0, 0.2, 0)
inputBox.Position = UDim2.new(0.05, 0, 0.05, 0)
inputBox.BackgroundColor3 = Color3.new(1, 1, 1)
inputBox.PlaceholderText = "Enter Username"
inputBox.Parent = inputFrame

-- Button to get stats
local getStatsButton = Instance.new("TextButton")
getStatsButton.Size = UDim2.new(0.9, 0, 0.2, 0)
getStatsButton.Position = UDim2.new(0.05, 0, 0.3, 0)
getStatsButton.Text = "Get Stats"
getStatsButton.BackgroundColor3 = Color3.new(0.3, 0.6, 0.3)
getStatsButton.Parent = inputFrame

-- Function to get player stats
local function getPlayerStats(username)
    local targetPlayer = Players:FindFirstChild(username)
    if targetPlayer then
        local leaderstats = targetPlayer:FindFirstChild("leaderstats")
        if leaderstats then
            local stats = {
                Kills = leaderstats:FindFirstChild("Kills") and leaderstats.Kills.Value or "N/A",
                Gems = leaderstats:FindFirstChild("Gems") and leaderstats.Gems.Value or "N/A",
                Brawls = leaderstats:FindFirstChild("Brawls") and leaderstats.Brawls.Value or "N/A",
                Rebirths = leaderstats:FindFirstChild("Rebirths") and leaderstats.Rebirths.Value or "N/A",
                Strength = leaderstats:FindFirstChild("Strength") and leaderstats.Strength.Value or "N/A",
                Durability = leaderstats:FindFirstChild("Durability") and leaderstats.Durability.Value or "N/A",
                Agility = leaderstats:FindFirstChild("Agility") and leaderstats.Agility.Value or "N/A"
            }

            return stats
        end
    end
    return nil
end

-- Function to create the stats GUI
local function createStatsGui(stats)
    local statsGui = Instance.new("ScreenGui")
    statsGui.Parent = playerGui

    local statsFrame = Instance.new("Frame")
    statsFrame.Size = UDim2.new(0.4, 0, 0.5, 0)
    statsFrame.Position = UDim2.new(0.3, 0, 0.25, 0)
    statsFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    statsFrame.Parent = statsGui

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0.1, 0)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.Text = "Player Stats"
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextScaled = true
    titleLabel.Parent = statsFrame

    local statIndex = 0
    for statName, value in pairs(stats) do
        statIndex += 1
        local statLabel = Instance.new("TextLabel")
        statLabel.Size = UDim2.new(1, 0, 0.1, 0)
        statLabel.Position = UDim2.new(0, 0, (statIndex) * 0.1, 0)
        statLabel.Text = statName .. ": " .. tostring(value)
        statLabel.TextColor3 = Color3.new(1, 1, 1)
        statLabel.BackgroundTransparency = 1
        statLabel.TextScaled = true
        statLabel.Parent = statsFrame
    end

    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0.9, 0, 0.2, 0)
    closeButton.Position = UDim2.new(0.05, 0, 0.85, 0)
    closeButton.Text = "Close Stats"
    closeButton.BackgroundColor3 = Color3.new(0.8, 0.1, 0.1) -- Red color
    closeButton.Parent = statsFrame

    closeButton.MouseButton1Click:Connect(function()
        statsGui:Destroy()
        mainGui.Enabled = true -- Re-enable the input GUI
    end)
end

-- Button click event
getStatsButton.MouseButton1Click:Connect(function()
    local username = inputBox.Text
    local stats = getPlayerStats(username)
    if stats then
        createStatsGui(stats)
    else
        print("Player not found or has no stats.")
    end
end)

-- Initialize GUI
ScreenGui.Parent = game.CoreGui
Window:SelectTab(1) -- Selects the first tab on open

print("GUI initialized successfully!")
