-- Define services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to create and display a stats GUI
local function createStatsGui(stats)
    local statsGui = Instance.new("ScreenGui")
    local frame = Instance.new("Frame")
    local closeButton = Instance.new("TextButton")

    statsGui.Name = "StatsGui"
    statsGui.Parent = game.CoreGui

    frame.Size = UDim2.new(0.5, 0, 0.5, 0) -- Size of the frame
    frame.Position = UDim2.new(0.5, -125, 0.5, -125) -- Centered based on size
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 0 -- No border
    frame.Parent = statsGui

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0.2, 0) -- Height for title
    titleLabel.Text = "Player Stats"
    titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.Parent = frame

    local statsList = Instance.new("TextLabel")
    statsList.Size = UDim2.new(1, 0, 0.6, 0) -- Height for stats list
    statsList.Position = UDim2.new(0, 0, 0.2, 0) -- Adjusted position for the list
    statsList.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    statsList.TextColor3 = Color3.fromRGB(255, 255, 255)
    statsList.TextScaled = true
    statsList.TextWrapped = true
    statsList.TextSize = 20 -- Text size
    statsList.Text = stats
    statsList.Parent = frame

    closeButton.Size = UDim2.new(0.4, 0, 0.1, 0) -- Button size
    closeButton.Position = UDim2.new(0.5, -80, 0.85, 0) -- Centered button
    closeButton.Text = "Close"
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Parent = frame

    -- Close the GUI when the button is clicked
    closeButton.MouseButton1Click:Connect(function()
        statsGui:Destroy() -- Destroy the GUI when the close button is clicked
    end)
end

-- Function to display stats for a player
local function displayPlayerStats(player)
    local statsString = ""

    -- Check for leaderstats and get all stats
    local leaderstats = player:FindFirstChild("leaderstats")
    if leaderstats then
        for _, stat in pairs(leaderstats:GetChildren()) do
            statsString = statsString .. stat.Name .. ": " .. tostring(stat.Value) .. "\n"
        end
    else
        statsString = "No leaderstats found.\n"
    end

    -- Check for additional stats
    local additionalStats = {"Durability", "Agility", "goodKarma", "evilKarma", "Gems", "Muscle King Time"}
    for _, statName in ipairs(additionalStats) do
        local stat = player:FindFirstChild(statName)
        if stat then
            statsString = statsString .. statName .. ": " .. tostring(stat.Value) .. "\n"
        else
            statsString = statsString .. statName .. " not found.\n"
        end
    end

    -- Show stats in GUI
    createStatsGui(statsString)
end

-- Function to find a player by username or display name
local function findPlayer(name)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name:lower() == name:lower() or player.DisplayName:lower() == name:lower() then
            return player
        end
    end
    return nil
end

-- Chat command to display stats for a user
LocalPlayer.Chatted:Connect(function(message)
    local args = message:split(" ")
    local command = args[1]:lower()

    -- Check if the command is any of the special characters
    if command:sub(1, 2) == ":s" or command:sub(1, 1) == ";" then
        local targetName = args[2] and args[2]:lower() or "me"
        local targetPlayer

        if targetName == "me" then
            targetPlayer = LocalPlayer
        else
            targetPlayer = findPlayer(targetName)
        end

        if targetPlayer then
            displayPlayerStats(targetPlayer)
        else
            createStatsGui("Player not found.")
        end
    end
end)

print("Use ':s (User/DisplayName)' or ';s (User/DisplayName)' or any other variant to display player stats.")
