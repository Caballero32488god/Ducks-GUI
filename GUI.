\local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Script Muscle Legends Window",
    LoadingTitle = "Farming Script Muscle Legends",
    LoadingSubtitle = "by bubleknight roblox",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "Roblox Muscle Legends Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

-- Auto Farming Tab
local AutoFarmingTab = Window:CreateTab("Auto Farming", nil)
local AutoFarmingSection = AutoFarmingTab:CreateSection("Auto Farming Section")

Rayfield:Notify({
    Title = "Script Notification",
    Content = "Muscle Legends Script",
    Duration = 5,
    Image = nil,
    Actions = {
        Ignore = {
            Name = "Okay!",
            Callback = function()
                print("The user tapped Okay!")
            end
        },
    },
})

-- Auto Click Section
local AutoClickSection = AutoFarmingTab:CreateSection("Auto Click")

local autoClicking = false

local autoClickButton = AutoFarmingTab:CreateButton({
    Name = "Auto Click (Off)",
    Callback = function()
        autoClicking = not autoClicking
        while autoClicking do
            local VirtualUser = game:GetService("VirtualUser")
            VirtualUser:Button1Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            wait(0.1) -- Adjust the delay as needed
            VirtualUser:Button1Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        end
    end,
})

-- Options Tab
local OptionsTab = Window:CreateTab("Options", nil)

-- Speed Settings Section
local SpeedSection = OptionsTab:CreateSection("Speed Settings")

local WalkSpeedSlider = OptionsTab:CreateSlider({
    Name = "Walk Speed",
    Range = {16, 2000}, -- Default Roblox walk speed is 16
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "WalkSpeedSlider",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = Value
        end
    end,
})

-- Jump Height Slider
local JumpSection = OptionsTab:CreateSection("Jump Settings")

local JumpHeightSlider = OptionsTab:CreateSlider({
    Name = "Jump Height",
    Range = {50, 1000}, -- Default Roblox jump height is around 50
    Increment = 10,
    Suffix = "Height",
    CurrentValue = 50,
    Flag = "JumpHeightSlider",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = Value
        end
    end,
})

-- Freeze Character Button
local frozen = false
local originalPosition

local freezeCharacterButton = OptionsTab:CreateButton({
    Name = "Freeze Character",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if not frozen then
                    frozen = true
                    originalPosition = character.PrimaryPart.CFrame
                    while frozen do
                        character:SetPrimaryPartCFrame(originalPosition)
                        wait()
                    end
                else
                    frozen = false
                end
            end
        end
    end,
})

-- Teleport Tab
local TeleportTab = Window:CreateTab("Teleport", nil)
local TeleportSection = TeleportTab:CreateSection("Teleport Section")

local teleportPosition = Vector3.new(890, 20, 320) -- Change this to your desired coordinates

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    if character then
        character:SetPrimaryPartCFrame(CFrame.new(teleportPosition))
    end
end

local teleportButton = TeleportTab:CreateButton({
    Name = "Teleport to Safe AFK Zone",
    Callback = function()
        teleportPlayer()
    end,
})
