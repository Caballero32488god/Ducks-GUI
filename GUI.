local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Duck GUI - By Masterboy123",
    SubTitle = "Game Controls",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Kill = Window:AddTab({ Title = "Kill", Icon = "" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "" }),
    Stats = Window:AddTab({ Title = "Stats", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" }) -- Keep existing Settings functionality
})

-- Main Tab
do
    -- Time of Day Dropdown
    local dayCycleDropdown = Tabs.Main:AddDropdown("DayCycle", {
        Title = "Select Time of Day",
        Values = {"Morning", "Afternoon", "Night"},
        Multi = false,
        Default = "Morning",
    }):OnChanged(function(Value)
        if Value == "Morning" then
            game:GetService("Lighting").TimeOfDay = "06:30:00"
        elseif Value == "Afternoon" then
            game:GetService("Lighting").TimeOfDay = "12:00:00"
        elseif Value == "Night" then
            game:GetService("Lighting").TimeOfDay = "21:00:00"
        end
    end)

    -- No Hit Cooldown
    Tabs.Main:AddButton({
        Title = "No Hit Cooldown",
        Callback = function()
            local player = game.Players.LocalPlayer
            local backpack = player:WaitForChild("Backpack")
            
            for _, tool in ipairs(backpack:GetChildren()) do
                if tool:IsA("Tool") then
                    if tool:FindFirstChild("attackTime") then
                        tool.attackTime.Value = 0.1
                    end
                    if tool:FindFirstChild("repTime") then
                        tool.repTime.Value = 0.1
                    end
                end
            end
            
            print("No Hit Cooldown activated.")
        end
    })
end

-- Kill Tab
do
    Tabs.Kill:AddButton({
        Title = "Kill Function (Not Implemented)",
        Callback = function()
            print("Kill function not implemented yet.")
        end
    })
end

-- Auto Farm Tab
do
    Tabs.AutoFarm:AddButton({
        Title = "Start Auto Farming (Not Implemented)",
        Callback = function()
            print("Auto farming function not implemented yet.")
        end
    })
end

-- Stats Tab
do
    Tabs.Stats:AddLabel({
        Title = "Player Stats (Not Implemented)",
        Callback = function()
            print("Stats feature not implemented yet.")
        end
    })
end

-- Misc Tab
do
    Tabs.Misc:AddButton({
        Title = "Walk on Water",
        Callback = function()
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

            -- Create a walkable part
            local walkablePart = Instance.new("Part")
            walkablePart.Size = Vector3.new(5, 1, 5) -- Adjust size as needed
            walkablePart.Material = Enum.Material.SmoothStone
            walkablePart.Anchored = true
            walkablePart.CanCollide = true
            walkablePart.Transparency = 0 -- Make it visible
            walkablePart.Parent = game.Workspace
            
            -- Position the part under the player
            walkablePart.Position = humanoidRootPart.Position - Vector3.new(0, 3, 0) -- Adjust height as needed

            -- Ensure the part follows the player
            humanoidRootPart:GetPropertyChangedSignal("Position"):Connect(function()
                walkablePart.Position = humanoidRootPart.Position - Vector3.new(0, 3, 0)
            end)

            print("Walkable water created just for you.")
        end
    })
end

-- Settings Tab remains unchanged from the original implementation

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("DuckScriptHub")
SaveManager:SetFolder("DuckScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Duck GUI",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
