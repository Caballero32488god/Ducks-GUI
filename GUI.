local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Main Tab
do
    -- InstantHit Button
    Tabs.Main:AddButton({
        Title = "InstantHit",
        Callback = function()
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local backpack = LocalPlayer:WaitForChild("Backpack")

            for _, tool in ipairs(backpack:GetChildren()) do
                if tool:IsA("Tool") then
                    if tool:FindFirstChild("attackTime") then
                        tool.attackTime.Value = 0.1
                    end
                    if tool:FindFirstChild("repTime") then
                        tool.repTime.Value = 0.1
                    end
                end
            end
            
            print("InstantHit activated.")
        end
    })

    -- LockPosition Button
    Tabs.Main:AddButton({
        Title = "LockPosition",
        Callback = function()
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart
                
                humanoidRootPart.Anchored = true
                print("Position locked.")
            else
                print("Character not found.")
            end
        end
    })

    -- Daycycle Dropdown
    Tabs.Main:AddDropdown("Daycycle", {
        Title = "Daycycle",
        Values = {"Morning", "Afternoon", "Night"},
        Multi = false,
        Default = "Morning",
    }):OnChanged(function(Value)
        if Value == "Morning" then
            game:GetService("Lighting").TimeOfDay = "06:30:00"
        elseif Value == "Afternoon" then
            game:GetService("Lighting").TimeOfDay = "12:00:00"
        elseif Value == "Night" then
            game:GetService("Lighting").TimeOfDay = "21:00:00"
        end
        print("Daycycle changed:", Value)
    end)
end

-- Settings Tab
do
    Tabs.Settings:AddButton({
        Title = "Save Settings",
        Callback = function()
            SaveManager:SaveConfig("DuckScriptHub/specific-game")
            print("Settings saved.")
        end
    })

    Tabs.Settings:AddButton({
        Title = "Load Settings",
        Callback = function()
            SaveManager:LoadConfig("DuckScriptHub/specific-game")
            print("Settings loaded.")
        end
    })

    Tabs.Settings:AddButton({
        Title = "Reset Settings",
        Callback = function()
            SaveManager:ResetConfig("DuckScriptHub/specific-game")
            print("Settings reset to default.")
        end
    })
end

-- Save Manager Setup
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
