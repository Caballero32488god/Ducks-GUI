-- Function to get all player names
local function getAllPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Killer Tab setup
Tabs.Killer:AddButton({
    Title = "Start Killing",
    Callback = function()
        local function setUserTools()
            local tools = {
                "Punch", "Ground Slam", "Stomp", "Handstands", "Pushups", "Weight", "Situps"
            }
            for _, tool in ipairs(tools) do
                local item = LocalPlayer.Backpack:FindFirstChild(tool)
                if item then
                    if item:FindFirstChild("attackTime") then
                        item.attackTime.Value = 0.1
                    end
                    if item:FindFirstChild("repTime") then
                        item.repTime.Value = 0.1
                    end
                end
            end
        end

        setUserTools()

        local function equipAndPunch()
            local punchTool = LocalPlayer.Backpack:FindFirstChild("Punch")

            if punchTool then
                LocalPlayer.Character.Humanoid:EquipTool(punchTool)
                wait(0.1)

                local function performPunch()
                    LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                    LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                end

                while true do
                    performPunch()
                    wait(0.5)
                end
            else
                print("Punch tool not found in Backpack.")
            end
        end

        equipAndPunch()
    end
})

local DropdownKillSingle = Tabs.Killer:AddDropdown("KillSingleDropdown", {
    Title = "Kill Single Person",
    Values = getAllPlayerNames(),
    Multi = false
})

local DropdownKillMultiple = Tabs.Killer:AddDropdown("KillMultipleDropdown", {
    Title = "Kill Multiple People",
    Values = getAllPlayerNames(),  -- Show all players in the server
    Multi = true
})

local DropdownNoKillSingle = Tabs.Killer:AddDropdown("NoKillSingleDropdown", {
    Title = "NoKill Single Person",
    Values = getAllPlayerNames(),
    Multi = false
})

local DropdownNoKillMultiple = Tabs.Killer:AddDropdown("NoKillMultipleDropdown", {
    Title = "NoKill Multiple People",
    Values = getAllPlayerNames(),
    Multi = true
})

-- Refresh dropdowns for all players when a player joins or leaves
Players.PlayerAdded:Connect(function()
    local updatedNames = getAllPlayerNames()
    DropdownKillSingle:SetValue(updatedNames)
    DropdownKillMultiple:SetValue(updatedNames)  -- Ensure Kill Multiple shows all players
    DropdownNoKillSingle:SetValue(updatedNames)
    DropdownNoKillMultiple:SetValue(updatedNames)
end)

Players.PlayerRemoving:Connect(function()
    local updatedNames = getAllPlayerNames()
    DropdownKillSingle:SetValue(updatedNames)
    DropdownKillMultiple:SetValue(updatedNames)  -- Ensure Kill Multiple shows all players
    DropdownNoKillSingle:SetValue(updatedNames)
    DropdownNoKillMultiple:SetValue(updatedNames)
end)

-- Initial population of dropdowns
local initialNames = getAllPlayerNames()
DropdownKillSingle:SetValue(initialNames)
DropdownKillMultiple:SetValue(initialNames)  -- Ensure Kill Multiple shows all players
DropdownNoKillSingle:SetValue(initialNames)
DropdownNoKillMultiple:SetValue(initialNames)
