local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Create the Fluent UI
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
})

-- Add Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Options = Window:AddTab({ Title = "Options", Icon = "settings" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "skull" }),
}

-- Notify that the GUI has loaded
Fluent:Notify({
    Title = "Welcome!",
    Content = "This GUI includes various settings.",
    Duration = 5
})

-- Main Tab Content
local MainSection = Tabs.Main:AddSection("Main Controls")

-- Speed Input
MainSection:AddInput("Speed", {
    Title = "Change Speed",
    Placeholder = "Enter Speed Value",
    Callback = function(value)
        local num = tonumber(value)
        if num then
            LocalPlayer.Character.Humanoid.WalkSpeed = num
        end
    end
})

-- Jump Power Input
MainSection:AddInput("JumpPower", {
    Title = "Change Jump Power",
    Placeholder = "Enter Jump Power Value",
    Callback = function(value)
        local num = tonumber(value)
        if num then
            LocalPlayer.Character.Humanoid.JumpPower = num
        end
    end
})

-- Killer Tab Content
local KillerSection = Tabs.Killer:AddSection("Killer Controls")

-- Attack/Rep Time Input
KillerSection:AddInput("Set Attack/Rep Time", {
    Title = "Change Attack/Rep Time",
    Placeholder = "Enter Value",
    Callback = function(value)
        local num = tonumber(value)
        if num then
            setToolValues(num)
            showNotification("Set attackTime and repTime to " .. num)
        else
            showNotification("Please enter a valid number.")
        end
    end
})

-- Function to set specific tool values
local function setToolValues(value)
    local tools = {"Punch", "Ground Slam", "Stomp", "Handstands", "Pushups", "Weight", "Situps"}
    for _, toolName in ipairs(tools) do
        local tool = LocalPlayer.Backpack:FindFirstChild(toolName)
        if tool and tool:IsA("Tool") then
            -- Safely check for attackTime and repTime
            local attackTime = tool:FindFirstChild("attackTime")
            local repTime = tool:FindFirstChild("repTime")

            if attackTime and attackTime:IsA("NumberValue") then
                attackTime.Value = value -- Set attack time
            end
            if repTime and repTime:IsA("NumberValue") then
                repTime.Value = value -- Set rep time
            end
        end
    end
end

-- Notification function
local ScreenGui = Instance.new("ScreenGui")
local Notification = Instance.new("TextLabel")

-- Function to create and display notification
local function showNotification(message)
    Notification.Text = message
    Notification.Size = UDim2.new(0.3, 0, 0.1, 0)
    Notification.Position = UDim2.new(0.5, -75, 0.1, 0)
    Notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Notification.TextColor3 = Color3.fromRGB(255, 255, 255)
    Notification.TextScaled = true
    Notification.Parent = ScreenGui

    ScreenGui.Parent = game.CoreGui

    -- Fade out effect
    for i = 1, 10 do
        wait(0.1)
        Notification.TextTransparency = i / 10
    end

    Notification:Destroy()
end

-- Final touches for scrollability
Window:SelectTab(1) -- Selects the first tab on open
