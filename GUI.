local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
local ToggleButton = Instance.new("TextButton")
local buttonEnabled = false -- Initial state

-- Configure the GUI
ScreenGui.Parent = game.CoreGui
ToggleButton.Size = UDim2.new(0, 200, 0, 50)
ToggleButton.Position = UDim2.new(0.5, -100, 0.5, -25)
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
ToggleButton.Text = "Enable Tool Cooldown"
ToggleButton.Parent = ScreenGui

-- Function to set tool cooldowns
local function setToolCooldowns()
    local tools = {
        {name = "Punch", type = "attackTime"},
        {name = "Ground Slam", type = "attackTime"},
        {name = "Stomp", type = "attackTime"},
        {name = "Handstands", type = "repTime"},
        {name = "Pushups", type = "repTime"},
        {name = "Weight", type = "repTime"},
        {name = "Situps", type = "repTime"}
    }
    
    for _, toolInfo in pairs(tools) do
        local tool = LocalPlayer.Backpack:FindFirstChild(toolInfo.name)
        if tool then
            local cooldown = tool:FindFirstChild(toolInfo.type) -- Assuming attackTime and repTime are objects
            if cooldown then
                cooldown.Value = 0.1 -- Set the value
            end
        end
    end
end

-- Function to toggle the button
local function toggleButton()
    buttonEnabled = not buttonEnabled
    ToggleButton.BackgroundColor3 = buttonEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
    ToggleButton.Text = buttonEnabled and "Disable Tool Cooldown" or "Enable Tool Cooldown"

    if buttonEnabled then
        setToolCooldowns() -- Call the function to set cooldowns when enabled
    else
        -- Reset cooldowns or add any logic needed when disabled
    end
end

-- Button click event
ToggleButton.MouseButton1Click:Connect(toggleButton)

-- Chat command to close the button
LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == "close" then
        ScreenGui:Destroy() -- Close the GUI
    end
end)
