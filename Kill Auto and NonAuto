local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local StarterPack = game:GetService("StarterPack")

-- Global variables
_G.autoPunchActive = false
_G.noKillList = {}
_G.killList = {}

-- Function to set attackTime of Punch tool to 0
local function setAttackTime()
    local punchTool = StarterPack:FindFirstChild("Punch")

    if punchTool then
        local attackTime = punchTool:FindFirstChild("attackTime")
        
        if attackTime then
            attackTime.Value = 0  -- Set the attack time to 0
            print("attackTime set to 0 for Punch tool.")
        else
            print("attackTime not found in Punch tool.")
        end
    else
        print("Punch tool not found in StarterPack.")
    end
end

-- Function to equip the Punch tool and perform the punch action
local function equipAndPunch()
    while true do
        local punchTool = LocalPlayer.Backpack:FindFirstChild("Punch")

        if punchTool then
            -- Equip the Punch tool
            LocalPlayer.Character.Humanoid:EquipTool(punchTool)
            wait(0.1) -- Wait briefly to ensure the tool is equipped

            -- Start the punching action after a 5-second wait
            wait(5)  -- Initial wait

            -- Punching loop
            while _G.autoPunchActive do
                LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                wait(0)  -- Wait for 0 seconds before the next punch (immediate)
            end
        else
            print("Punch tool not found in Backpack. Waiting...")
            wait(2) -- Wait before checking again
        end
    end
end

-- Chat command handling
LocalPlayer.Chatted:Connect(function(message)
    local args = message:split(" ")

    if args[1]:lower() == "on" then
        _G.autoPunchActive = true
        print("Auto-punching enabled.")
        equipAndPunch() -- Start punching when enabled
    elseif args[1]:lower() == "off" then
        _G.autoPunchActive = false
        print("Auto-punching disabled.")
    elseif args[1]:lower() == ";nokill" then
        for i = 2, #args do
            local user = args[i]
            _G.noKillList[user] = true -- Add user to no-kill list
        end
        print("Added to no-kill list: " .. table.concat(args, ", ", 2))
    elseif args[1]:lower() == ";kill" and args[2] then
        local targetUser = args[2]
        _G.killList[targetUser] = true -- Add user to kill list
        print("Started bringing " .. targetUser .. "'s parts to you.")
    elseif args[1]:lower() == ";stopkill" and args[2] then
        local targetUser = args[2]
        _G.killList[targetUser] = nil -- Remove user from kill list
        print("Stopped bringing " .. targetUser .. "'s parts.")
    end
end)

-- Call the function to set the attackTime
setAttackTime()
